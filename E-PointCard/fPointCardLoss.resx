<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAgEAAAAAAAD/7gAOQWRvYmUAZAAAAAAB/+wAEUR1Y2t5AAEABAAAAGQAAP/bAEMA
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQICAgICAgICAgICAwMDAwMD
        AwMDA//bAEMBAQEBAQEBAgEBAgICAQICAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMD
        AwMDAwMDAwMDAwMDA//AABEIAGQASwMBEQACEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUG
        BwgJCgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQz
        YnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaH
        iImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy
        8/T19vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAAB
        AncAAQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6
        Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqy
        s7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/AP3D
        r+Nj+kgoAo6nqml6Jp17rGt6np2i6Rptu93qOravf2ml6Xp9rHjzLq/1G+mt7OztkyMySOqDPJrSnSqV
        pclJOUrN+iinKTfRJJNtvRJXZvhcLisfiqWAwNKpXx1epGnTp04ynUqVJyUYU6cIpynOcmoxhFOUpNJJ
        tnm3/C+/gP8A9Fx+DP8A4dTwF/8ANBXGsbgXqsRh/wDwbT/+TP1N+APjwnZ8EcY3/wCxLmX/AMyh/wAL
        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
        AH//2Q==
</value>
  </data>
</root>